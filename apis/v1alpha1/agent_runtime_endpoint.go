// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// AgentRuntimeEndpointSpec defines the desired state of AgentRuntimeEndpoint.
//
// Contains information about an agent runtime endpoint. An endpoint provides
// a way to connect to and interact with an agent runtime.
type AgentRuntimeEndpointSpec struct {

	// The unique identifier of the AgentCore Runtime to create an endpoint for.
	//
	// Regex Pattern: `^[a-zA-Z][a-zA-Z0-9_]{0,99}-[a-zA-Z0-9]{10}$`
	// +kubebuilder:validation:Required
	AgentRuntimeID *string `json:"agentRuntimeID"`
	// The version of the AgentCore Runtime to use for the endpoint.
	//
	// Regex Pattern: `^([1-9][0-9]{0,4})$`
	AgentRuntimeVersion *string `json:"agentRuntimeVersion,omitempty"`
	// The description of the AgentCore Runtime endpoint.
	Description *string `json:"description,omitempty"`
	// The name of the AgentCore Runtime endpoint.
	//
	// Regex Pattern: `^[a-zA-Z][a-zA-Z0-9_]{0,47}$`
	Name *string `json:"name,omitempty"`
	// A map of tag keys and values to assign to the agent runtime endpoint. Tags
	// enable you to categorize your resources in different ways, for example, by
	// purpose, owner, or environment.
	Tags map[string]*string `json:"tags,omitempty"`
}

// AgentRuntimeEndpointStatus defines the observed state of AgentRuntimeEndpoint
type AgentRuntimeEndpointStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The Amazon Resource Name (ARN) of the AgentCore Runtime.
	//
	// Regex Pattern: `^arn:(-[^:]+)?:bedrock-agentcore:[a-z0-9-]+:[0-9]{12}:agent/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}:([0-9]{0,4}[1-9][0-9]{0,4})$`
	// +kubebuilder:validation:Optional
	AgentRuntimeARN *string `json:"agentRuntimeARN,omitempty"`
	// The timestamp when the AgentCore Runtime endpoint was created.
	// +kubebuilder:validation:Optional
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	// The current status of the AgentCore Runtime endpoint.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty"`
	// The target version of the AgentCore Runtime for the endpoint.
	//
	// Regex Pattern: `^([1-9][0-9]{0,4})$`
	// +kubebuilder:validation:Optional
	TargetVersion *string `json:"targetVersion,omitempty"`
}

// AgentRuntimeEndpoint is the Schema for the AgentRuntimeEndpoints API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type AgentRuntimeEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AgentRuntimeEndpointSpec   `json:"spec,omitempty"`
	Status            AgentRuntimeEndpointStatus `json:"status,omitempty"`
}

// AgentRuntimeEndpointList contains a list of AgentRuntimeEndpoint
// +kubebuilder:object:root=true
type AgentRuntimeEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AgentRuntimeEndpoint `json:"items"`
}

func init() {
	SchemeBuilder.Register(&AgentRuntimeEndpoint{}, &AgentRuntimeEndpointList{})
}
